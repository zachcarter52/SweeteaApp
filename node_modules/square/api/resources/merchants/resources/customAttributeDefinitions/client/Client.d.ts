/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import * as Square from "../../../../../index";
export declare namespace CustomAttributeDefinitions {
    interface Options {
        environment?: core.Supplier<environments.SquareEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
export declare class CustomAttributeDefinitions {
    protected readonly _options: CustomAttributeDefinitions.Options;
    constructor(_options?: CustomAttributeDefinitions.Options);
    /**
     * Lists the merchant-related [custom attribute definitions](entity:CustomAttributeDefinition) that belong to a Square seller account.
     * When all response pages are retrieved, the results include all custom attribute definitions
     * that are visible to the requesting application, including those that are created by other
     * applications and set to `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`.
     *
     * @param {Square.merchants.ListCustomAttributeDefinitionsRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.merchants.customAttributeDefinitions.list()
     */
    list(request?: Square.merchants.ListCustomAttributeDefinitionsRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): Promise<core.Page<Square.CustomAttributeDefinition>>;
    /**
     * Creates a merchant-related [custom attribute definition](entity:CustomAttributeDefinition) for a Square seller account.
     * Use this endpoint to define a custom attribute that can be associated with a merchant connecting to your application.
     * A custom attribute definition specifies the `key`, `visibility`, `schema`, and other properties
     * for a custom attribute. After the definition is created, you can call
     * [UpsertMerchantCustomAttribute](api-endpoint:MerchantCustomAttributes-UpsertMerchantCustomAttribute) or
     * [BulkUpsertMerchantCustomAttributes](api-endpoint:MerchantCustomAttributes-BulkUpsertMerchantCustomAttributes)
     * to set the custom attribute for a merchant.
     *
     * @param {Square.merchants.CreateMerchantCustomAttributeDefinitionRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.merchants.customAttributeDefinitions.create({
     *         customAttributeDefinition: {
     *             key: "alternative_seller_name",
     *             schema: {
     *                 "ref": "https://developer-production-s.squarecdn.com/schemas/v1/common.json#squareup.common.String"
     *             },
     *             name: "Alternative Merchant Name",
     *             description: "This is the other name this merchant goes by.",
     *             visibility: "VISIBILITY_READ_ONLY"
     *         }
     *     })
     */
    create(request: Square.merchants.CreateMerchantCustomAttributeDefinitionRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): Promise<Square.CreateMerchantCustomAttributeDefinitionResponse>;
    /**
     * Retrieves a merchant-related [custom attribute definition](entity:CustomAttributeDefinition) from a Square seller account.
     * To retrieve a custom attribute definition created by another application, the `visibility`
     * setting must be `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`.
     *
     * @param {Square.merchants.GetCustomAttributeDefinitionsRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.merchants.customAttributeDefinitions.get({
     *         key: "key"
     *     })
     */
    get(request: Square.merchants.GetCustomAttributeDefinitionsRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): Promise<Square.RetrieveMerchantCustomAttributeDefinitionResponse>;
    /**
     * Updates a merchant-related [custom attribute definition](entity:CustomAttributeDefinition) for a Square seller account.
     * Use this endpoint to update the following fields: `name`, `description`, `visibility`, or the
     * `schema` for a `Selection` data type.
     * Only the definition owner can update a custom attribute definition.
     *
     * @param {Square.merchants.UpdateMerchantCustomAttributeDefinitionRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.merchants.customAttributeDefinitions.update({
     *         key: "key",
     *         customAttributeDefinition: {
     *             description: "Update the description as desired.",
     *             visibility: "VISIBILITY_READ_ONLY"
     *         }
     *     })
     */
    update(request: Square.merchants.UpdateMerchantCustomAttributeDefinitionRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): Promise<Square.UpdateMerchantCustomAttributeDefinitionResponse>;
    /**
     * Deletes a merchant-related [custom attribute definition](entity:CustomAttributeDefinition) from a Square seller account.
     * Deleting a custom attribute definition also deletes the corresponding custom attribute from
     * the merchant.
     * Only the definition owner can delete a custom attribute definition.
     *
     * @param {Square.merchants.DeleteCustomAttributeDefinitionsRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.merchants.customAttributeDefinitions.delete({
     *         key: "key"
     *     })
     */
    delete(request: Square.merchants.DeleteCustomAttributeDefinitionsRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): Promise<Square.DeleteMerchantCustomAttributeDefinitionResponse>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
