/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import * as Square from "../../../../../index";
export declare namespace Codes {
    interface Options {
        environment?: core.Supplier<environments.SquareEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
export declare class Codes {
    protected readonly _options: Codes.Options;
    constructor(_options?: Codes.Options);
    /**
     * Lists all DeviceCodes associated with the merchant.
     *
     * @param {Square.devices.ListCodesRequest} request
     * @param {Codes.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.devices.codes.list()
     */
    list(request?: Square.devices.ListCodesRequest, requestOptions?: Codes.RequestOptions): Promise<core.Page<Square.DeviceCode>>;
    /**
     * Creates a DeviceCode that can be used to login to a Square Terminal device to enter the connected
     * terminal mode.
     *
     * @param {Square.devices.CreateDeviceCodeRequest} request
     * @param {Codes.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.devices.codes.create({
     *         idempotencyKey: "01bb00a6-0c86-4770-94ed-f5fca973cd56",
     *         deviceCode: {
     *             name: "Counter 1",
     *             productType: "TERMINAL_API",
     *             locationId: "B5E4484SHHNYH"
     *         }
     *     })
     */
    create(request: Square.devices.CreateDeviceCodeRequest, requestOptions?: Codes.RequestOptions): Promise<Square.CreateDeviceCodeResponse>;
    /**
     * Retrieves DeviceCode with the associated ID.
     *
     * @param {Square.devices.GetCodesRequest} request
     * @param {Codes.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.devices.codes.get({
     *         id: "id"
     *     })
     */
    get(request: Square.devices.GetCodesRequest, requestOptions?: Codes.RequestOptions): Promise<Square.GetDeviceCodeResponse>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
