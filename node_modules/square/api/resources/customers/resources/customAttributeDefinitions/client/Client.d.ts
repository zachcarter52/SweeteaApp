/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import * as Square from "../../../../../index";
export declare namespace CustomAttributeDefinitions {
    interface Options {
        environment?: core.Supplier<environments.SquareEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
export declare class CustomAttributeDefinitions {
    protected readonly _options: CustomAttributeDefinitions.Options;
    constructor(_options?: CustomAttributeDefinitions.Options);
    /**
     * Lists the customer-related [custom attribute definitions](entity:CustomAttributeDefinition) that belong to a Square seller account.
     *
     * When all response pages are retrieved, the results include all custom attribute definitions
     * that are visible to the requesting application, including those that are created by other
     * applications and set to `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`. Note that
     * seller-defined custom attributes (also known as custom fields) are always set to `VISIBILITY_READ_WRITE_VALUES`.
     *
     * @param {Square.customers.ListCustomAttributeDefinitionsRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.customers.customAttributeDefinitions.list()
     */
    list(request?: Square.customers.ListCustomAttributeDefinitionsRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): Promise<core.Page<Square.CustomAttributeDefinition>>;
    /**
     * Creates a customer-related [custom attribute definition](entity:CustomAttributeDefinition) for a Square seller account.
     * Use this endpoint to define a custom attribute that can be associated with customer profiles.
     *
     * A custom attribute definition specifies the `key`, `visibility`, `schema`, and other properties
     * for a custom attribute. After the definition is created, you can call
     * [UpsertCustomerCustomAttribute](api-endpoint:CustomerCustomAttributes-UpsertCustomerCustomAttribute) or
     * [BulkUpsertCustomerCustomAttributes](api-endpoint:CustomerCustomAttributes-BulkUpsertCustomerCustomAttributes)
     * to set the custom attribute for customer profiles in the seller's Customer Directory.
     *
     * Sellers can view all custom attributes in exported customer data, including those set to
     * `VISIBILITY_HIDDEN`.
     *
     * @param {Square.customers.CreateCustomerCustomAttributeDefinitionRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.customers.customAttributeDefinitions.create({
     *         customAttributeDefinition: {
     *             key: "favoritemovie",
     *             schema: {
     *                 "ref": "https://developer-production-s.squarecdn.com/schemas/v1/common.json#squareup.common.String"
     *             },
     *             name: "Favorite Movie",
     *             description: "The favorite movie of the customer.",
     *             visibility: "VISIBILITY_HIDDEN"
     *         }
     *     })
     */
    create(request: Square.customers.CreateCustomerCustomAttributeDefinitionRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): Promise<Square.CreateCustomerCustomAttributeDefinitionResponse>;
    /**
     * Retrieves a customer-related [custom attribute definition](entity:CustomAttributeDefinition) from a Square seller account.
     *
     * To retrieve a custom attribute definition created by another application, the `visibility`
     * setting must be `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`. Note that seller-defined custom attributes
     * (also known as custom fields) are always set to `VISIBILITY_READ_WRITE_VALUES`.
     *
     * @param {Square.customers.GetCustomAttributeDefinitionsRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.customers.customAttributeDefinitions.get({
     *         key: "key"
     *     })
     */
    get(request: Square.customers.GetCustomAttributeDefinitionsRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): Promise<Square.GetCustomerCustomAttributeDefinitionResponse>;
    /**
     * Updates a customer-related [custom attribute definition](entity:CustomAttributeDefinition) for a Square seller account.
     *
     * Use this endpoint to update the following fields: `name`, `description`, `visibility`, or the
     * `schema` for a `Selection` data type.
     *
     * Only the definition owner can update a custom attribute definition. Note that sellers can view
     * all custom attributes in exported customer data, including those set to `VISIBILITY_HIDDEN`.
     *
     * @param {Square.customers.UpdateCustomerCustomAttributeDefinitionRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.customers.customAttributeDefinitions.update({
     *         key: "key",
     *         customAttributeDefinition: {
     *             description: "Update the description as desired.",
     *             visibility: "VISIBILITY_READ_ONLY"
     *         }
     *     })
     */
    update(request: Square.customers.UpdateCustomerCustomAttributeDefinitionRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): Promise<Square.UpdateCustomerCustomAttributeDefinitionResponse>;
    /**
     * Deletes a customer-related [custom attribute definition](entity:CustomAttributeDefinition) from a Square seller account.
     *
     * Deleting a custom attribute definition also deletes the corresponding custom attribute from
     * all customer profiles in the seller's Customer Directory.
     *
     * Only the definition owner can delete a custom attribute definition.
     *
     * @param {Square.customers.DeleteCustomAttributeDefinitionsRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.customers.customAttributeDefinitions.delete({
     *         key: "key"
     *     })
     */
    delete(request: Square.customers.DeleteCustomAttributeDefinitionsRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): Promise<Square.DeleteCustomerCustomAttributeDefinitionResponse>;
    /**
     * Creates or updates [custom attributes](entity:CustomAttribute) for customer profiles as a bulk operation.
     *
     * Use this endpoint to set the value of one or more custom attributes for one or more customer profiles.
     * A custom attribute is based on a custom attribute definition in a Square seller account, which is
     * created using the [CreateCustomerCustomAttributeDefinition](api-endpoint:CustomerCustomAttributes-CreateCustomerCustomAttributeDefinition) endpoint.
     *
     * This `BulkUpsertCustomerCustomAttributes` endpoint accepts a map of 1 to 25 individual upsert
     * requests and returns a map of individual upsert responses. Each upsert request has a unique ID
     * and provides a customer ID and custom attribute. Each upsert response is returned with the ID
     * of the corresponding request.
     *
     * To create or update a custom attribute owned by another application, the `visibility` setting
     * must be `VISIBILITY_READ_WRITE_VALUES`. Note that seller-defined custom attributes
     * (also known as custom fields) are always set to `VISIBILITY_READ_WRITE_VALUES`.
     *
     * @param {Square.customers.BatchUpsertCustomerCustomAttributesRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.customers.customAttributeDefinitions.batchUpsert({
     *         values: {
     *             "id1": {
     *                 customerId: "N3NCVYY3WS27HF0HKANA3R9FP8",
     *                 customAttribute: {
     *                     key: "favoritemovie",
     *                     value: "Dune"
     *                 }
     *             },
     *             "id2": {
     *                 customerId: "SY8EMWRNDN3TQDP2H4KS1QWMMM",
     *                 customAttribute: {
     *                     key: "ownsmovie",
     *                     value: false
     *                 }
     *             },
     *             "id3": {
     *                 customerId: "SY8EMWRNDN3TQDP2H4KS1QWMMM",
     *                 customAttribute: {
     *                     key: "favoritemovie",
     *                     value: "Star Wars"
     *                 }
     *             },
     *             "id4": {
     *                 customerId: "N3NCVYY3WS27HF0HKANA3R9FP8",
     *                 customAttribute: {
     *                     key: "square:a0f1505a-2aa1-490d-91a8-8d31ff181808",
     *                     value: "10.5"
     *                 }
     *             },
     *             "id5": {
     *                 customerId: "70548QG1HN43B05G0KCZ4MMC1G",
     *                 customAttribute: {
     *                     key: "sq0ids-0evKIskIGaY45fCyNL66aw:backupemail",
     *                     value: "fake-email@squareup.com"
     *                 }
     *             }
     *         }
     *     })
     */
    batchUpsert(request: Square.customers.BatchUpsertCustomerCustomAttributesRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): Promise<Square.BatchUpsertCustomerCustomAttributesResponse>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
