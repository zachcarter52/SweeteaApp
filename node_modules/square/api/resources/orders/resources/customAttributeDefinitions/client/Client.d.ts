/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import * as Square from "../../../../../index";
export declare namespace CustomAttributeDefinitions {
    interface Options {
        environment?: core.Supplier<environments.SquareEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
export declare class CustomAttributeDefinitions {
    protected readonly _options: CustomAttributeDefinitions.Options;
    constructor(_options?: CustomAttributeDefinitions.Options);
    /**
     * Lists the order-related [custom attribute definitions](entity:CustomAttributeDefinition) that belong to a Square seller account.
     *
     * When all response pages are retrieved, the results include all custom attribute definitions
     * that are visible to the requesting application, including those that are created by other
     * applications and set to `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`. Note that
     * seller-defined custom attributes (also known as custom fields) are always set to `VISIBILITY_READ_WRITE_VALUES`.
     *
     * @param {Square.orders.ListCustomAttributeDefinitionsRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.orders.customAttributeDefinitions.list()
     */
    list(request?: Square.orders.ListCustomAttributeDefinitionsRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): Promise<core.Page<Square.CustomAttributeDefinition>>;
    /**
     * Creates an order-related custom attribute definition.  Use this endpoint to
     * define a custom attribute that can be associated with orders.
     *
     * After creating a custom attribute definition, you can set the custom attribute for orders
     * in the Square seller account.
     *
     * @param {Square.orders.CreateOrderCustomAttributeDefinitionRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.orders.customAttributeDefinitions.create({
     *         customAttributeDefinition: {
     *             key: "cover-count",
     *             schema: {
     *                 "ref": "https://developer-production-s.squarecdn.com/schemas/v1/common.json#squareup.common.Number"
     *             },
     *             name: "Cover count",
     *             description: "The number of people seated at a table",
     *             visibility: "VISIBILITY_READ_WRITE_VALUES"
     *         },
     *         idempotencyKey: "IDEMPOTENCY_KEY"
     *     })
     */
    create(request: Square.orders.CreateOrderCustomAttributeDefinitionRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): Promise<Square.CreateOrderCustomAttributeDefinitionResponse>;
    /**
     * Retrieves an order-related [custom attribute definition](entity:CustomAttributeDefinition) from a Square seller account.
     *
     * To retrieve a custom attribute definition created by another application, the `visibility`
     * setting must be `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`. Note that seller-defined custom attributes
     * (also known as custom fields) are always set to `VISIBILITY_READ_WRITE_VALUES`.
     *
     * @param {Square.orders.GetCustomAttributeDefinitionsRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.orders.customAttributeDefinitions.get({
     *         key: "key"
     *     })
     */
    get(request: Square.orders.GetCustomAttributeDefinitionsRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): Promise<Square.RetrieveOrderCustomAttributeDefinitionResponse>;
    /**
     * Updates an order-related custom attribute definition for a Square seller account.
     *
     * Only the definition owner can update a custom attribute definition. Note that sellers can view all custom attributes in exported customer data, including those set to `VISIBILITY_HIDDEN`.
     *
     * @param {Square.orders.UpdateOrderCustomAttributeDefinitionRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.orders.customAttributeDefinitions.update({
     *         key: "key",
     *         customAttributeDefinition: {
     *             key: "cover-count",
     *             visibility: "VISIBILITY_READ_ONLY",
     *             version: 1
     *         },
     *         idempotencyKey: "IDEMPOTENCY_KEY"
     *     })
     */
    update(request: Square.orders.UpdateOrderCustomAttributeDefinitionRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): Promise<Square.UpdateOrderCustomAttributeDefinitionResponse>;
    /**
     * Deletes an order-related [custom attribute definition](entity:CustomAttributeDefinition) from a Square seller account.
     *
     * Only the definition owner can delete a custom attribute definition.
     *
     * @param {Square.orders.DeleteCustomAttributeDefinitionsRequest} request
     * @param {CustomAttributeDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.orders.customAttributeDefinitions.delete({
     *         key: "key"
     *     })
     */
    delete(request: Square.orders.DeleteCustomAttributeDefinitionsRequest, requestOptions?: CustomAttributeDefinitions.RequestOptions): Promise<Square.DeleteOrderCustomAttributeDefinitionResponse>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
