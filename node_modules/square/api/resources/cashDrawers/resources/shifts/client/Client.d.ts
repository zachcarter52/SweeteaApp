/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import * as Square from "../../../../../index";
export declare namespace Shifts {
    interface Options {
        environment?: core.Supplier<environments.SquareEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
export declare class Shifts {
    protected readonly _options: Shifts.Options;
    constructor(_options?: Shifts.Options);
    /**
     * Provides the details for all of the cash drawer shifts for a location
     * in a date range.
     *
     * @param {Square.cashDrawers.ListShiftsRequest} request
     * @param {Shifts.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.cashDrawers.shifts.list({
     *         locationId: "location_id"
     *     })
     */
    list(request: Square.cashDrawers.ListShiftsRequest, requestOptions?: Shifts.RequestOptions): Promise<core.Page<Square.CashDrawerShiftSummary>>;
    /**
     * Provides the summary details for a single cash drawer shift. See
     * [ListCashDrawerShiftEvents](api-endpoint:CashDrawers-ListCashDrawerShiftEvents) for a list of cash drawer shift events.
     *
     * @param {Square.cashDrawers.GetShiftsRequest} request
     * @param {Shifts.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.cashDrawers.shifts.get({
     *         shiftId: "shift_id",
     *         locationId: "location_id"
     *     })
     */
    get(request: Square.cashDrawers.GetShiftsRequest, requestOptions?: Shifts.RequestOptions): Promise<Square.GetCashDrawerShiftResponse>;
    /**
     * Provides a paginated list of events for a single cash drawer shift.
     *
     * @param {Square.cashDrawers.ListEventsShiftsRequest} request
     * @param {Shifts.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.cashDrawers.shifts.listEvents({
     *         shiftId: "shift_id",
     *         locationId: "location_id"
     *     })
     */
    listEvents(request: Square.cashDrawers.ListEventsShiftsRequest, requestOptions?: Shifts.RequestOptions): Promise<core.Page<Square.CashDrawerShiftEvent>>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
