"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Invoice = void 0;
const core = __importStar(require("../../core"));
const InvoiceRecipient_1 = require("./InvoiceRecipient");
const InvoicePaymentRequest_1 = require("./InvoicePaymentRequest");
const InvoiceDeliveryMethod_1 = require("./InvoiceDeliveryMethod");
const Money_1 = require("./Money");
const InvoiceStatus_1 = require("./InvoiceStatus");
const InvoiceAcceptedPaymentMethods_1 = require("./InvoiceAcceptedPaymentMethods");
const InvoiceCustomField_1 = require("./InvoiceCustomField");
const InvoiceAttachment_1 = require("./InvoiceAttachment");
exports.Invoice = core.serialization.object({
    id: core.serialization.string().optional(),
    version: core.serialization.number().optional(),
    locationId: core.serialization.property("location_id", core.serialization.string().optionalNullable()),
    orderId: core.serialization.property("order_id", core.serialization.string().optionalNullable()),
    primaryRecipient: core.serialization.property("primary_recipient", InvoiceRecipient_1.InvoiceRecipient.optional()),
    paymentRequests: core.serialization.property("payment_requests", core.serialization.list(InvoicePaymentRequest_1.InvoicePaymentRequest).optionalNullable()),
    deliveryMethod: core.serialization.property("delivery_method", InvoiceDeliveryMethod_1.InvoiceDeliveryMethod.optional()),
    invoiceNumber: core.serialization.property("invoice_number", core.serialization.string().optionalNullable()),
    title: core.serialization.string().optionalNullable(),
    description: core.serialization.string().optionalNullable(),
    scheduledAt: core.serialization.property("scheduled_at", core.serialization.string().optionalNullable()),
    publicUrl: core.serialization.property("public_url", core.serialization.string().optional()),
    nextPaymentAmountMoney: core.serialization.property("next_payment_amount_money", Money_1.Money.optional()),
    status: InvoiceStatus_1.InvoiceStatus.optional(),
    timezone: core.serialization.string().optional(),
    createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
    updatedAt: core.serialization.property("updated_at", core.serialization.string().optional()),
    acceptedPaymentMethods: core.serialization.property("accepted_payment_methods", InvoiceAcceptedPaymentMethods_1.InvoiceAcceptedPaymentMethods.optional()),
    customFields: core.serialization.property("custom_fields", core.serialization.list(InvoiceCustomField_1.InvoiceCustomField).optionalNullable()),
    subscriptionId: core.serialization.property("subscription_id", core.serialization.string().optional()),
    saleOrServiceDate: core.serialization.property("sale_or_service_date", core.serialization.string().optionalNullable()),
    paymentConditions: core.serialization.property("payment_conditions", core.serialization.string().optionalNullable()),
    storePaymentMethodEnabled: core.serialization.property("store_payment_method_enabled", core.serialization.boolean().optionalNullable()),
    attachments: core.serialization.list(InvoiceAttachment_1.InvoiceAttachment).optional(),
    creatorTeamMemberId: core.serialization.property("creator_team_member_id", core.serialization.string().optional()),
});
