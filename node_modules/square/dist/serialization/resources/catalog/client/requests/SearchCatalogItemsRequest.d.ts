/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../../../index";
import * as Square from "../../../../../api/index";
import * as core from "../../../../../core";
import { SearchCatalogItemsRequestStockLevel } from "../../../../types/SearchCatalogItemsRequestStockLevel";
import { SortOrder } from "../../../../types/SortOrder";
import { CatalogItemProductType } from "../../../../types/CatalogItemProductType";
import { CustomAttributeFilter } from "../../../../types/CustomAttributeFilter";
import { ArchivedState } from "../../../../types/ArchivedState";
export declare const SearchCatalogItemsRequest: core.serialization.Schema<serializers.SearchCatalogItemsRequest.Raw, Square.SearchCatalogItemsRequest>;
export declare namespace SearchCatalogItemsRequest {
    interface Raw {
        text_filter?: string | null;
        category_ids?: string[] | null;
        stock_levels?: SearchCatalogItemsRequestStockLevel.Raw[] | null;
        enabled_location_ids?: string[] | null;
        cursor?: string | null;
        limit?: number | null;
        sort_order?: SortOrder.Raw | null;
        product_types?: CatalogItemProductType.Raw[] | null;
        custom_attribute_filters?: CustomAttributeFilter.Raw[] | null;
        archived_state?: ArchivedState.Raw | null;
    }
}
