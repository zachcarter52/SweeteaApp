/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import * as Square from "../../../../../index";
export declare namespace CustomAttributes {
    interface Options {
        environment?: core.Supplier<environments.SquareEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
export declare class CustomAttributes {
    protected readonly _options: CustomAttributes.Options;
    constructor(_options?: CustomAttributes.Options);
    /**
     * Lists the [custom attributes](entity:CustomAttribute) associated with a customer profile.
     *
     * You can use the `with_definitions` query parameter to also retrieve custom attribute definitions
     * in the same call.
     *
     * When all response pages are retrieved, the results include all custom attributes that are
     * visible to the requesting application, including those that are owned by other applications
     * and set to `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`.
     *
     * @param {Square.customers.ListCustomAttributesRequest} request
     * @param {CustomAttributes.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.customers.customAttributes.list({
     *         customerId: "customer_id"
     *     })
     */
    list(request: Square.customers.ListCustomAttributesRequest, requestOptions?: CustomAttributes.RequestOptions): Promise<core.Page<Square.CustomAttribute>>;
    /**
     * Retrieves a [custom attribute](entity:CustomAttribute) associated with a customer profile.
     *
     * You can use the `with_definition` query parameter to also retrieve the custom attribute definition
     * in the same call.
     *
     * To retrieve a custom attribute owned by another application, the `visibility` setting must be
     * `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`. Note that seller-defined custom attributes
     * (also known as custom fields) are always set to `VISIBILITY_READ_WRITE_VALUES`.
     *
     * @param {Square.customers.GetCustomAttributesRequest} request
     * @param {CustomAttributes.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.customers.customAttributes.get({
     *         customerId: "customer_id",
     *         key: "key"
     *     })
     */
    get(request: Square.customers.GetCustomAttributesRequest, requestOptions?: CustomAttributes.RequestOptions): Promise<Square.GetCustomerCustomAttributeResponse>;
    /**
     * Creates or updates a [custom attribute](entity:CustomAttribute) for a customer profile.
     *
     * Use this endpoint to set the value of a custom attribute for a specified customer profile.
     * A custom attribute is based on a custom attribute definition in a Square seller account, which
     * is created using the [CreateCustomerCustomAttributeDefinition](api-endpoint:CustomerCustomAttributes-CreateCustomerCustomAttributeDefinition) endpoint.
     *
     * To create or update a custom attribute owned by another application, the `visibility` setting
     * must be `VISIBILITY_READ_WRITE_VALUES`. Note that seller-defined custom attributes
     * (also known as custom fields) are always set to `VISIBILITY_READ_WRITE_VALUES`.
     *
     * @param {Square.customers.UpsertCustomerCustomAttributeRequest} request
     * @param {CustomAttributes.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.customers.customAttributes.upsert({
     *         customerId: "customer_id",
     *         key: "key",
     *         customAttribute: {
     *             value: "Dune"
     *         }
     *     })
     */
    upsert(request: Square.customers.UpsertCustomerCustomAttributeRequest, requestOptions?: CustomAttributes.RequestOptions): Promise<Square.UpsertCustomerCustomAttributeResponse>;
    /**
     * Deletes a [custom attribute](entity:CustomAttribute) associated with a customer profile.
     *
     * To delete a custom attribute owned by another application, the `visibility` setting must be
     * `VISIBILITY_READ_WRITE_VALUES`. Note that seller-defined custom attributes
     * (also known as custom fields) are always set to `VISIBILITY_READ_WRITE_VALUES`.
     *
     * @param {Square.customers.DeleteCustomAttributesRequest} request
     * @param {CustomAttributes.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.customers.customAttributes.delete({
     *         customerId: "customer_id",
     *         key: "key"
     *     })
     */
    delete(request: Square.customers.DeleteCustomAttributesRequest, requestOptions?: CustomAttributes.RequestOptions): Promise<Square.DeleteCustomerCustomAttributeResponse>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
