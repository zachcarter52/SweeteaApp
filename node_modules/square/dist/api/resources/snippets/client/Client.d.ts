/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Square from "../../../index";
export declare namespace Snippets {
    interface Options {
        environment?: core.Supplier<environments.SquareEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
export declare class Snippets {
    protected readonly _options: Snippets.Options;
    constructor(_options?: Snippets.Options);
    /**
     * Retrieves your snippet from a Square Online site. A site can contain snippets from multiple snippet applications, but you can retrieve only the snippet that was added by your application.
     *
     * You can call [ListSites](api-endpoint:Sites-ListSites) to get the IDs of the sites that belong to a seller.
     *
     *
     * __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis).
     *
     * @param {Square.GetSnippetsRequest} request
     * @param {Snippets.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.snippets.get({
     *         siteId: "site_id"
     *     })
     */
    get(request: Square.GetSnippetsRequest, requestOptions?: Snippets.RequestOptions): Promise<Square.GetSnippetResponse>;
    /**
     * Adds a snippet to a Square Online site or updates the existing snippet on the site.
     * The snippet code is appended to the end of the `head` element on every page of the site, except checkout pages. A snippet application can add one snippet to a given site.
     *
     * You can call [ListSites](api-endpoint:Sites-ListSites) to get the IDs of the sites that belong to a seller.
     *
     *
     * __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis).
     *
     * @param {Square.UpsertSnippetRequest} request
     * @param {Snippets.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.snippets.upsert({
     *         siteId: "site_id",
     *         snippet: {
     *             content: "<script>var js = 1;</script>"
     *         }
     *     })
     */
    upsert(request: Square.UpsertSnippetRequest, requestOptions?: Snippets.RequestOptions): Promise<Square.UpsertSnippetResponse>;
    /**
     * Removes your snippet from a Square Online site.
     *
     * You can call [ListSites](api-endpoint:Sites-ListSites) to get the IDs of the sites that belong to a seller.
     *
     *
     * __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis).
     *
     * @param {Square.DeleteSnippetsRequest} request
     * @param {Snippets.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.snippets.delete({
     *         siteId: "site_id"
     *     })
     */
    delete(request: Square.DeleteSnippetsRequest, requestOptions?: Snippets.RequestOptions): Promise<Square.DeleteSnippetResponse>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
