/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import { BreakTypes } from "../resources/breakTypes/client/Client";
import { EmployeeWages } from "../resources/employeeWages/client/Client";
import { Shifts } from "../resources/shifts/client/Client";
import { TeamMemberWages } from "../resources/teamMemberWages/client/Client";
import { WorkweekConfigs } from "../resources/workweekConfigs/client/Client";
export declare namespace Labor {
    interface Options {
        environment?: core.Supplier<environments.SquareEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
export declare class Labor {
    protected readonly _options: Labor.Options;
    protected _breakTypes: BreakTypes | undefined;
    protected _employeeWages: EmployeeWages | undefined;
    protected _shifts: Shifts | undefined;
    protected _teamMemberWages: TeamMemberWages | undefined;
    protected _workweekConfigs: WorkweekConfigs | undefined;
    constructor(_options?: Labor.Options);
    get breakTypes(): BreakTypes;
    get employeeWages(): EmployeeWages;
    get shifts(): Shifts;
    get teamMemberWages(): TeamMemberWages;
    get workweekConfigs(): WorkweekConfigs;
}
