/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import * as Square from "../../../../../index";
export declare namespace WorkweekConfigs {
    interface Options {
        environment?: core.Supplier<environments.SquareEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
export declare class WorkweekConfigs {
    protected readonly _options: WorkweekConfigs.Options;
    constructor(_options?: WorkweekConfigs.Options);
    /**
     * Returns a list of `WorkweekConfig` instances for a business.
     *
     * @param {Square.labor.ListWorkweekConfigsRequest} request
     * @param {WorkweekConfigs.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.labor.workweekConfigs.list()
     */
    list(request?: Square.labor.ListWorkweekConfigsRequest, requestOptions?: WorkweekConfigs.RequestOptions): Promise<core.Page<Square.WorkweekConfig>>;
    /**
     * Updates a `WorkweekConfig`.
     *
     * @param {Square.labor.UpdateWorkweekConfigRequest} request
     * @param {WorkweekConfigs.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.labor.workweekConfigs.get({
     *         id: "id",
     *         workweekConfig: {
     *             startOfWeek: "MON",
     *             startOfDayLocalTime: "10:00",
     *             version: 10
     *         }
     *     })
     */
    get(request: Square.labor.UpdateWorkweekConfigRequest, requestOptions?: WorkweekConfigs.RequestOptions): Promise<Square.UpdateWorkweekConfigResponse>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
