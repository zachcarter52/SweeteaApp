/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import * as Square from "../../../../../index";
export declare namespace TeamMemberWages {
    interface Options {
        environment?: core.Supplier<environments.SquareEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the Square-Version header */
        version?: "2025-03-19";
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
export declare class TeamMemberWages {
    protected readonly _options: TeamMemberWages.Options;
    constructor(_options?: TeamMemberWages.Options);
    /**
     * Returns a paginated list of `TeamMemberWage` instances for a business.
     *
     * @param {Square.labor.ListTeamMemberWagesRequest} request
     * @param {TeamMemberWages.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.labor.teamMemberWages.list()
     */
    list(request?: Square.labor.ListTeamMemberWagesRequest, requestOptions?: TeamMemberWages.RequestOptions): Promise<core.Page<Square.TeamMemberWage>>;
    /**
     * Returns a single `TeamMemberWage` specified by `id`.
     *
     * @param {Square.labor.GetTeamMemberWagesRequest} request
     * @param {TeamMemberWages.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.labor.teamMemberWages.get({
     *         id: "id"
     *     })
     */
    get(request: Square.labor.GetTeamMemberWagesRequest, requestOptions?: TeamMemberWages.RequestOptions): Promise<Square.GetTeamMemberWageResponse>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
