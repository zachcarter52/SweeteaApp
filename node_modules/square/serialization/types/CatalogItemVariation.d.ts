/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { CatalogPricingType } from "./CatalogPricingType";
import { Money } from "./Money";
import { ItemVariationLocationOverrides } from "./ItemVariationLocationOverrides";
import { InventoryAlertType } from "./InventoryAlertType";
import { CatalogItemOptionValueForItemVariation } from "./CatalogItemOptionValueForItemVariation";
import { CatalogStockConversion } from "./CatalogStockConversion";
export declare const CatalogItemVariation: core.serialization.ObjectSchema<serializers.CatalogItemVariation.Raw, Square.CatalogItemVariation>;
export declare namespace CatalogItemVariation {
    interface Raw {
        item_id?: (string | null) | null;
        name?: (string | null) | null;
        sku?: (string | null) | null;
        upc?: (string | null) | null;
        ordinal?: number | null;
        pricing_type?: CatalogPricingType.Raw | null;
        price_money?: Money.Raw | null;
        location_overrides?: (ItemVariationLocationOverrides.Raw[] | null) | null;
        track_inventory?: (boolean | null) | null;
        inventory_alert_type?: InventoryAlertType.Raw | null;
        inventory_alert_threshold?: ((bigint | number) | null) | null;
        user_data?: (string | null) | null;
        service_duration?: ((bigint | number) | null) | null;
        available_for_booking?: (boolean | null) | null;
        item_option_values?: (CatalogItemOptionValueForItemVariation.Raw[] | null) | null;
        measurement_unit_id?: (string | null) | null;
        sellable?: (boolean | null) | null;
        stockable?: (boolean | null) | null;
        image_ids?: (string[] | null) | null;
        team_member_ids?: (string[] | null) | null;
        stockable_conversion?: CatalogStockConversion.Raw | null;
    }
}
