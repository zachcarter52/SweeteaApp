"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.V1Order = void 0;
const core = __importStar(require("../../core"));
const Error_1 = require("./Error_");
const V1OrderState_1 = require("./V1OrderState");
const Address_1 = require("./Address");
const V1Money_1 = require("./V1Money");
const V1Tender_1 = require("./V1Tender");
const V1OrderHistoryEntry_1 = require("./V1OrderHistoryEntry");
exports.V1Order = core.serialization.object({
    errors: core.serialization.list(Error_1.Error_).optionalNullable(),
    id: core.serialization.string().optional(),
    buyerEmail: core.serialization.property("buyer_email", core.serialization.string().optionalNullable()),
    recipientName: core.serialization.property("recipient_name", core.serialization.string().optionalNullable()),
    recipientPhoneNumber: core.serialization.property("recipient_phone_number", core.serialization.string().optionalNullable()),
    state: V1OrderState_1.V1OrderState.optional(),
    shippingAddress: core.serialization.property("shipping_address", Address_1.Address.optional()),
    subtotalMoney: core.serialization.property("subtotal_money", V1Money_1.V1Money.optional()),
    totalShippingMoney: core.serialization.property("total_shipping_money", V1Money_1.V1Money.optional()),
    totalTaxMoney: core.serialization.property("total_tax_money", V1Money_1.V1Money.optional()),
    totalPriceMoney: core.serialization.property("total_price_money", V1Money_1.V1Money.optional()),
    totalDiscountMoney: core.serialization.property("total_discount_money", V1Money_1.V1Money.optional()),
    createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
    updatedAt: core.serialization.property("updated_at", core.serialization.string().optional()),
    expiresAt: core.serialization.property("expires_at", core.serialization.string().optionalNullable()),
    paymentId: core.serialization.property("payment_id", core.serialization.string().optionalNullable()),
    buyerNote: core.serialization.property("buyer_note", core.serialization.string().optionalNullable()),
    completedNote: core.serialization.property("completed_note", core.serialization.string().optionalNullable()),
    refundedNote: core.serialization.property("refunded_note", core.serialization.string().optionalNullable()),
    canceledNote: core.serialization.property("canceled_note", core.serialization.string().optionalNullable()),
    tender: V1Tender_1.V1Tender.optional(),
    orderHistory: core.serialization.property("order_history", core.serialization.list(V1OrderHistoryEntry_1.V1OrderHistoryEntry).optionalNullable()),
    promoCode: core.serialization.property("promo_code", core.serialization.string().optionalNullable()),
    btcReceiveAddress: core.serialization.property("btc_receive_address", core.serialization.string().optionalNullable()),
    btcPriceSatoshi: core.serialization.property("btc_price_satoshi", core.serialization.number().optionalNullable()),
});
