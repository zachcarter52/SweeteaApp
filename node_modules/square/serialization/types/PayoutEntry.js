"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PayoutEntry = void 0;
const core = __importStar(require("../../core"));
const ActivityType_1 = require("./ActivityType");
const Money_1 = require("./Money");
const PaymentBalanceActivityAppFeeRevenueDetail_1 = require("./PaymentBalanceActivityAppFeeRevenueDetail");
const PaymentBalanceActivityAppFeeRefundDetail_1 = require("./PaymentBalanceActivityAppFeeRefundDetail");
const PaymentBalanceActivityAutomaticSavingsDetail_1 = require("./PaymentBalanceActivityAutomaticSavingsDetail");
const PaymentBalanceActivityAutomaticSavingsReversedDetail_1 = require("./PaymentBalanceActivityAutomaticSavingsReversedDetail");
const PaymentBalanceActivityChargeDetail_1 = require("./PaymentBalanceActivityChargeDetail");
const PaymentBalanceActivityDepositFeeDetail_1 = require("./PaymentBalanceActivityDepositFeeDetail");
const PaymentBalanceActivityDepositFeeReversedDetail_1 = require("./PaymentBalanceActivityDepositFeeReversedDetail");
const PaymentBalanceActivityDisputeDetail_1 = require("./PaymentBalanceActivityDisputeDetail");
const PaymentBalanceActivityFeeDetail_1 = require("./PaymentBalanceActivityFeeDetail");
const PaymentBalanceActivityFreeProcessingDetail_1 = require("./PaymentBalanceActivityFreeProcessingDetail");
const PaymentBalanceActivityHoldAdjustmentDetail_1 = require("./PaymentBalanceActivityHoldAdjustmentDetail");
const PaymentBalanceActivityOpenDisputeDetail_1 = require("./PaymentBalanceActivityOpenDisputeDetail");
const PaymentBalanceActivityOtherDetail_1 = require("./PaymentBalanceActivityOtherDetail");
const PaymentBalanceActivityOtherAdjustmentDetail_1 = require("./PaymentBalanceActivityOtherAdjustmentDetail");
const PaymentBalanceActivityRefundDetail_1 = require("./PaymentBalanceActivityRefundDetail");
const PaymentBalanceActivityReleaseAdjustmentDetail_1 = require("./PaymentBalanceActivityReleaseAdjustmentDetail");
const PaymentBalanceActivityReserveHoldDetail_1 = require("./PaymentBalanceActivityReserveHoldDetail");
const PaymentBalanceActivityReserveReleaseDetail_1 = require("./PaymentBalanceActivityReserveReleaseDetail");
const PaymentBalanceActivitySquareCapitalPaymentDetail_1 = require("./PaymentBalanceActivitySquareCapitalPaymentDetail");
const PaymentBalanceActivitySquareCapitalReversedPaymentDetail_1 = require("./PaymentBalanceActivitySquareCapitalReversedPaymentDetail");
const PaymentBalanceActivityTaxOnFeeDetail_1 = require("./PaymentBalanceActivityTaxOnFeeDetail");
const PaymentBalanceActivityThirdPartyFeeDetail_1 = require("./PaymentBalanceActivityThirdPartyFeeDetail");
const PaymentBalanceActivityThirdPartyFeeRefundDetail_1 = require("./PaymentBalanceActivityThirdPartyFeeRefundDetail");
const PaymentBalanceActivitySquarePayrollTransferDetail_1 = require("./PaymentBalanceActivitySquarePayrollTransferDetail");
const PaymentBalanceActivitySquarePayrollTransferReversedDetail_1 = require("./PaymentBalanceActivitySquarePayrollTransferReversedDetail");
exports.PayoutEntry = core.serialization.object({
    id: core.serialization.string(),
    payoutId: core.serialization.property("payout_id", core.serialization.string()),
    effectiveAt: core.serialization.property("effective_at", core.serialization.string().optionalNullable()),
    type: ActivityType_1.ActivityType.optional(),
    grossAmountMoney: core.serialization.property("gross_amount_money", Money_1.Money.optional()),
    feeAmountMoney: core.serialization.property("fee_amount_money", Money_1.Money.optional()),
    netAmountMoney: core.serialization.property("net_amount_money", Money_1.Money.optional()),
    typeAppFeeRevenueDetails: core.serialization.property("type_app_fee_revenue_details", PaymentBalanceActivityAppFeeRevenueDetail_1.PaymentBalanceActivityAppFeeRevenueDetail.optional()),
    typeAppFeeRefundDetails: core.serialization.property("type_app_fee_refund_details", PaymentBalanceActivityAppFeeRefundDetail_1.PaymentBalanceActivityAppFeeRefundDetail.optional()),
    typeAutomaticSavingsDetails: core.serialization.property("type_automatic_savings_details", PaymentBalanceActivityAutomaticSavingsDetail_1.PaymentBalanceActivityAutomaticSavingsDetail.optional()),
    typeAutomaticSavingsReversedDetails: core.serialization.property("type_automatic_savings_reversed_details", PaymentBalanceActivityAutomaticSavingsReversedDetail_1.PaymentBalanceActivityAutomaticSavingsReversedDetail.optional()),
    typeChargeDetails: core.serialization.property("type_charge_details", PaymentBalanceActivityChargeDetail_1.PaymentBalanceActivityChargeDetail.optional()),
    typeDepositFeeDetails: core.serialization.property("type_deposit_fee_details", PaymentBalanceActivityDepositFeeDetail_1.PaymentBalanceActivityDepositFeeDetail.optional()),
    typeDepositFeeReversedDetails: core.serialization.property("type_deposit_fee_reversed_details", PaymentBalanceActivityDepositFeeReversedDetail_1.PaymentBalanceActivityDepositFeeReversedDetail.optional()),
    typeDisputeDetails: core.serialization.property("type_dispute_details", PaymentBalanceActivityDisputeDetail_1.PaymentBalanceActivityDisputeDetail.optional()),
    typeFeeDetails: core.serialization.property("type_fee_details", PaymentBalanceActivityFeeDetail_1.PaymentBalanceActivityFeeDetail.optional()),
    typeFreeProcessingDetails: core.serialization.property("type_free_processing_details", PaymentBalanceActivityFreeProcessingDetail_1.PaymentBalanceActivityFreeProcessingDetail.optional()),
    typeHoldAdjustmentDetails: core.serialization.property("type_hold_adjustment_details", PaymentBalanceActivityHoldAdjustmentDetail_1.PaymentBalanceActivityHoldAdjustmentDetail.optional()),
    typeOpenDisputeDetails: core.serialization.property("type_open_dispute_details", PaymentBalanceActivityOpenDisputeDetail_1.PaymentBalanceActivityOpenDisputeDetail.optional()),
    typeOtherDetails: core.serialization.property("type_other_details", PaymentBalanceActivityOtherDetail_1.PaymentBalanceActivityOtherDetail.optional()),
    typeOtherAdjustmentDetails: core.serialization.property("type_other_adjustment_details", PaymentBalanceActivityOtherAdjustmentDetail_1.PaymentBalanceActivityOtherAdjustmentDetail.optional()),
    typeRefundDetails: core.serialization.property("type_refund_details", PaymentBalanceActivityRefundDetail_1.PaymentBalanceActivityRefundDetail.optional()),
    typeReleaseAdjustmentDetails: core.serialization.property("type_release_adjustment_details", PaymentBalanceActivityReleaseAdjustmentDetail_1.PaymentBalanceActivityReleaseAdjustmentDetail.optional()),
    typeReserveHoldDetails: core.serialization.property("type_reserve_hold_details", PaymentBalanceActivityReserveHoldDetail_1.PaymentBalanceActivityReserveHoldDetail.optional()),
    typeReserveReleaseDetails: core.serialization.property("type_reserve_release_details", PaymentBalanceActivityReserveReleaseDetail_1.PaymentBalanceActivityReserveReleaseDetail.optional()),
    typeSquareCapitalPaymentDetails: core.serialization.property("type_square_capital_payment_details", PaymentBalanceActivitySquareCapitalPaymentDetail_1.PaymentBalanceActivitySquareCapitalPaymentDetail.optional()),
    typeSquareCapitalReversedPaymentDetails: core.serialization.property("type_square_capital_reversed_payment_details", PaymentBalanceActivitySquareCapitalReversedPaymentDetail_1.PaymentBalanceActivitySquareCapitalReversedPaymentDetail.optional()),
    typeTaxOnFeeDetails: core.serialization.property("type_tax_on_fee_details", PaymentBalanceActivityTaxOnFeeDetail_1.PaymentBalanceActivityTaxOnFeeDetail.optional()),
    typeThirdPartyFeeDetails: core.serialization.property("type_third_party_fee_details", PaymentBalanceActivityThirdPartyFeeDetail_1.PaymentBalanceActivityThirdPartyFeeDetail.optional()),
    typeThirdPartyFeeRefundDetails: core.serialization.property("type_third_party_fee_refund_details", PaymentBalanceActivityThirdPartyFeeRefundDetail_1.PaymentBalanceActivityThirdPartyFeeRefundDetail.optional()),
    typeSquarePayrollTransferDetails: core.serialization.property("type_square_payroll_transfer_details", PaymentBalanceActivitySquarePayrollTransferDetail_1.PaymentBalanceActivitySquarePayrollTransferDetail.optional()),
    typeSquarePayrollTransferReversedDetails: core.serialization.property("type_square_payroll_transfer_reversed_details", PaymentBalanceActivitySquarePayrollTransferReversedDetail_1.PaymentBalanceActivitySquarePayrollTransferReversedDetail.optional()),
});
