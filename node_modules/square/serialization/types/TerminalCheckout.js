"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.TerminalCheckout = void 0;
const core = __importStar(require("../../core"));
const Money_1 = require("./Money");
const PaymentOptions_1 = require("./PaymentOptions");
const DeviceCheckoutOptions_1 = require("./DeviceCheckoutOptions");
const ActionCancelReason_1 = require("./ActionCancelReason");
const CheckoutOptionsPaymentType_1 = require("./CheckoutOptionsPaymentType");
exports.TerminalCheckout = core.serialization.object({
    id: core.serialization.string().optional(),
    amountMoney: core.serialization.property("amount_money", Money_1.Money),
    referenceId: core.serialization.property("reference_id", core.serialization.string().optionalNullable()),
    note: core.serialization.string().optionalNullable(),
    orderId: core.serialization.property("order_id", core.serialization.string().optionalNullable()),
    paymentOptions: core.serialization.property("payment_options", PaymentOptions_1.PaymentOptions.optional()),
    deviceOptions: core.serialization.property("device_options", DeviceCheckoutOptions_1.DeviceCheckoutOptions),
    deadlineDuration: core.serialization.property("deadline_duration", core.serialization.string().optionalNullable()),
    status: core.serialization.string().optional(),
    cancelReason: core.serialization.property("cancel_reason", ActionCancelReason_1.ActionCancelReason.optional()),
    paymentIds: core.serialization.property("payment_ids", core.serialization.list(core.serialization.string()).optional()),
    createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
    updatedAt: core.serialization.property("updated_at", core.serialization.string().optional()),
    appId: core.serialization.property("app_id", core.serialization.string().optional()),
    locationId: core.serialization.property("location_id", core.serialization.string().optional()),
    paymentType: core.serialization.property("payment_type", CheckoutOptionsPaymentType_1.CheckoutOptionsPaymentType.optional()),
    teamMemberId: core.serialization.property("team_member_id", core.serialization.string().optionalNullable()),
    customerId: core.serialization.property("customer_id", core.serialization.string().optionalNullable()),
    appFeeMoney: core.serialization.property("app_fee_money", Money_1.Money.optional()),
    statementDescriptionIdentifier: core.serialization.property("statement_description_identifier", core.serialization.string().optionalNullable()),
    tipMoney: core.serialization.property("tip_money", Money_1.Money.optional()),
});
