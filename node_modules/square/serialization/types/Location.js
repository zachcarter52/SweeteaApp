"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Location = void 0;
const core = __importStar(require("../../core"));
const Address_1 = require("./Address");
const LocationCapability_1 = require("./LocationCapability");
const LocationStatus_1 = require("./LocationStatus");
const Country_1 = require("./Country");
const Currency_1 = require("./Currency");
const LocationType_1 = require("./LocationType");
const BusinessHours_1 = require("./BusinessHours");
const Coordinates_1 = require("./Coordinates");
const TaxIds_1 = require("./TaxIds");
exports.Location = core.serialization.object({
    id: core.serialization.string().optional(),
    name: core.serialization.string().optionalNullable(),
    address: Address_1.Address.optional(),
    timezone: core.serialization.string().optionalNullable(),
    capabilities: core.serialization.list(LocationCapability_1.LocationCapability).optional(),
    status: LocationStatus_1.LocationStatus.optional(),
    createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
    merchantId: core.serialization.property("merchant_id", core.serialization.string().optional()),
    country: Country_1.Country.optional(),
    languageCode: core.serialization.property("language_code", core.serialization.string().optionalNullable()),
    currency: Currency_1.Currency.optional(),
    phoneNumber: core.serialization.property("phone_number", core.serialization.string().optionalNullable()),
    businessName: core.serialization.property("business_name", core.serialization.string().optionalNullable()),
    type: LocationType_1.LocationType.optional(),
    websiteUrl: core.serialization.property("website_url", core.serialization.string().optionalNullable()),
    businessHours: core.serialization.property("business_hours", BusinessHours_1.BusinessHours.optional()),
    businessEmail: core.serialization.property("business_email", core.serialization.string().optionalNullable()),
    description: core.serialization.string().optionalNullable(),
    twitterUsername: core.serialization.property("twitter_username", core.serialization.string().optionalNullable()),
    instagramUsername: core.serialization.property("instagram_username", core.serialization.string().optionalNullable()),
    facebookUrl: core.serialization.property("facebook_url", core.serialization.string().optionalNullable()),
    coordinates: Coordinates_1.Coordinates.optional(),
    logoUrl: core.serialization.property("logo_url", core.serialization.string().optional()),
    posBackgroundUrl: core.serialization.property("pos_background_url", core.serialization.string().optional()),
    mcc: core.serialization.string().optionalNullable(),
    fullFormatLogoUrl: core.serialization.property("full_format_logo_url", core.serialization.string().optional()),
    taxIds: core.serialization.property("tax_ids", TaxIds_1.TaxIds.optional()),
});
