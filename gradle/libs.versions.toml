[versions]
accompanistPermissions = "0.31.2-alpha"
agp = "8.9.1"
amplifyframeworkAwsAuthCognito = "2.16.0"
android-compileSdk = "35"
android-minSdk = "25"
android-targetSdk = "35"
androidx-activity-compose = "1.9.3"
androidx-appcompat = "1.7.0"
androidx-constraint-layout = "2.2.0"
androidx-core-ktx = "1.15.0"
androidx-espresso-core = "3.6.1"
androidx-lifecycle = "2.8.2"
androidx-material = "1.12.0"
androidx-compose = "1.7.5"
androidx-test-junit = "1.2.1"
authCognito = "2.0.0"
authenticator = "1.2.0"
cardEntry = "1.6.6"
compose-plugin = "1.6.11"
amplify-core = "2.24.0"
coil = "3.0.4"
converterMoshi = "2.11.0"
desugar_jdk_libs = "2.1.2"
junit = "4.13.2"
kotlin = "2.0.21"

kotlinBom = "provider"
kotlinx-coroutines = "1.9.0"
kotlinx-serialization = "1.7.3"
kotlinx-datetime = "0.6.1"
ktor = "3.0.1"
lifecycleRuntimeKtx = "2.8.7"
logback = "1.5.8"
ktor-tests = "2.3.9"

loggingInterceptor = "5.0.0-alpha.14"
mapsCompose = "2.11.4"
material = "1.4.3"
moshiKotlin = "1.15.2"
moshiKotlinCodegen = "1.15.2"
navigation-compose = "2.8.3"
exposed = "0.53.0"
mariadb = "3.5.0"
jbcrypt =  "0.4"
acme4j = "3.5.1"

composeMaterial = "1.4.0"
material3Android = "1.3.1"
navigationRuntimeKtx = "2.8.3"
aws-kotlin = "1.4.16"
playServicesLocation = "21.3.0"
playServicesMaps = "19.1.0"
playServicesMapsVersion = "18.0.0"
roomCompiler = "2.6.1"
squareSdkVersion = "2.0.0-beta5"
core-splashscreen = "1.0.1"

legacySupportV4 = "1.0.0"
cardview = "1.0.0"
multiplatform-paths = "0.2.2"
retrofit = "2.11.0"
connectivity = "1.2.0"
ui = "1.4.3"
uiTestJunit4 = "1.7.8"
uiTestManifest = "1.7.8"
uiToolingPreview = "1.4.3"
core = "1.13.0"
firebaseFirestoreKtx = "25.1.3"
uiTestJunit4Android = "1.7.8"
composeBom = "2025.03.01"
lifecycleViewmodelAndroid = "2.8.7"


volley = "1.2.1"
places = "3.3.0"
testng = "6.9.6"

[libraries]
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermissions" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-material-v143 = { module = "androidx.compose.material:material", version.ref = "material" }
androidx-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4" }
androidx-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "uiTestManifest" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomCompiler" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomCompiler" }
androidx-ui-tooling-preview-v143 = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "uiToolingPreview" }
androidx-ui-v143 = { module = "androidx.compose.ui:ui", version.ref = "ui" }
card-entry = { module = "com.squareup.sdk.in-app-payments:card-entry", version.ref = "cardEntry" }
com-squareup-moshi-moshi-kotlin-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshiKotlinCodegen" }
converter-moshi = { module = "com.squareup.retrofit2:converter-moshi" }
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlinBom" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { module = "junit:junit", version.ref = "junit" }
volley = { group = "com.android.volley", name = "volley", version.ref = "volley" }
places = { group = "com.google.android.libraries.places", name = "places", version.ref = "places"}

#cognito
desugar_jdk_libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar_jdk_libs" }
auth-cognito = { module = "com.amplifyframework:auth-cognito", version.ref = "authCognito" }
authenticator = { module = "com.amplifyframework.ui:authenticator", version.ref = "authenticator" }
aws-http = { module = "aws.sdk.kotlin:aws-http-jvm", version.ref = "aws-kotlin"}
aws-amplify-core = { module = "com.amplifyframework:core", version.ref = "amplify-core" }
aws-auth-cognito = { module = "com.amplifyframework:aws-auth-cognito", version.ref = "amplify-core" }
aws-cognitoidentity = { module = "aws.sdk.kotlin:cognitoidentity", version.ref = "aws-kotlin"}


#androidx
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core-ktx" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
#androidx-wear-compose-material = { module = "androidx.wear.compose:compose-material", version.ref = "composeMaterial" }
androidx-compose-material = { module= "androidx.compose.material:material", version.ref = "androidx-compose" }
androidx-compose-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "androidx-compose"}
androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "androidx-compose"}
androidx-compose-ui-text-googlefonts = { module = "androidx.compose.ui:ui-text-google-fonts", version.ref = "androidx-compose"}
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "androidx-compose"}
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx-constraint-layout" }
androidx-material3-android = { module = "androidx.compose.material3:material3-android", version.ref = "material3Android" }
androidx-navigation-runtime-ktx = { module = "androidx.navigation:navigation-runtime-ktx", version.ref = "navigation-compose" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation-compose" }
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-test-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-junit" }
androidx-legacy-support-v4 = { module = "androidx.legacy:legacy-support-v4", version.ref = "legacySupportV4" }
androidx-cardview = { module = "androidx.cardview:cardview", version.ref = "cardview" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines"}



logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor" }
moshi = { module = "com.squareup.moshi:moshi" }
moshi-adapters = { module = "com.squareup.moshi:moshi-adapters" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshiKotlin" }
moshi-kotlin-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen" }
okhttp3-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
play-services-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "playServicesMaps" }
maps-compose = { module = "com.google.maps.android:maps-compose", version.ref = "mapsCompose" }
play-services-maps-v1800 = { module = "com.google.android.gms:play-services-maps", version.ref = "playServicesMapsVersion" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit"}
retrofit-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit"}

coil= {module = "io.coil-kt.coil3:coil", version.ref="coil"}
coil-compose = {module = "io.coil-kt.coil3:coil-compose", version.ref = "coil"}
coil-network = {module = "io.coil-kt.coil3:coil-network-ktor3", version.ref ="coil"}
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor"}
ktor-client-android = { module= "io.ktor:ktor-client-okhttp", version.ref = "ktor"}
ktor-client-ios= { module= "io.ktor:ktor-client-darwin", version.ref = "ktor"}
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor"}

multiplatform-paths = { module = "me.sujanpoudel.multiplatform.utils:multiplatform-paths", version.ref = "multiplatform-paths"}
#server
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth-jvm", version.ref = "ktor" }
ktor-server-sessions = { module = "io.ktor:ktor-server-sessions-jvm", version.ref = "ktor" }
ktor-server-host-common = { module = "io.ktor:ktor-server-host-common-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor-tests" }
ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml-jvm", version.ref = "ktor" }
ktor-server-thymeleaf = { module = "io.ktor:ktor-server-thymeleaf-jvm", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-network-tls = { module = "io.ktor:ktor-network-tls-certificates", version.ref = "ktor"}
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed"}
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed"}
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed"}
exposed-kotlin-datetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed"}
kotlinx-datetime = {module = "org.jetbrains.kotlinx:kotlinx-datetime-jvm", version.ref = "kotlinx-datetime"}
mariadb-jdbc =  { module = "org.mariadb.jdbc:mariadb-java-client", version.ref = "mariadb" }
jbcrypt = { module = "org.mindrot:jbcrypt", version.ref = "jbcrypt"}
acme4j = { module = "org.shredzone.acme4j:acme4j-client", version.ref="acme4j"}

mobile-payments-sdk = { module = "com.squareup.sdk:mobile-payments-sdk", version.ref = "squareSdkVersion" }
mockreader-ui = { module = "com.squareup.sdk:mockreader-ui", version.ref = "squareSdkVersion" }
core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "core-splashscreen" }

androidx-core = { group = "androidx.core", name = "core", version.ref = "core" }
testng = { group = "org.testng", name = "testng", version.ref = "testng" }

firebase-firestore-ktx = { group = "com.google.firebase", name = "firebase-firestore-ktx", version.ref = "firebaseFirestoreKtx" }
androidx-ui-test-junit4-android = { group = "androidx.compose.ui", name = "ui-test-junit4-android", version.ref = "uiTestJunit4Android" }
ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "uiTestJunit4" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
retrofit2-converter-moshi = { module = "com.squareup.retrofit2:converter-moshi" }
squareup-converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "converterMoshi" }
squareup-moshi-kotlin-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen" }
androidx-lifecycle-viewmodel-android = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-android", version.ref = "lifecycleViewmodelAndroid" }


[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version = "2.0.21" }
ksp = { id = "com.google.devtools.ksp", version = "2.0.21-1.0.28" }
